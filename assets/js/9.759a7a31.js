(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{357:function(_,v,a){"use strict";a.r(v);var t=a(42),r=Object(t.a)({},(function(){var _=this,v=_.$createElement,a=_._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h2",{attrs:{id:"简历"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简历"}},[_._v("#")]),_._v(" 简历")]),_._v(" "),a("p",[_._v("校园经历")]),_._v(" "),a("h4",{attrs:{id:"项目的技术难点、亮点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目的技术难点、亮点"}},[_._v("#")]),_._v(" 项目的技术难点、亮点")]),_._v(" "),a("p",[_._v("使用的技术")]),_._v(" "),a("h5",{attrs:{id:"考试系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考试系统"}},[_._v("#")]),_._v(" 考试系统")]),_._v(" "),a("p",[_._v("token 分类搜索")]),_._v(" "),a("p",[_._v("通过Flask的请求装饰器"),a("code",[_._v("@app.before_request")]),_._v("，在每次请求前选择数据库连接池"),a("code",[_._v("g.exam_type")]),_._v(" "),a("code",[_._v("SQLAlchemy.get_engine")]),_._v("，最终实现了数据库的分库")]),_._v(" "),a("h6",{attrs:{id:"应用上下文-application-context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用上下文-application-context"}},[_._v("#")]),_._v(" 应用上下文(application context)")]),_._v(" "),a("p",[_._v("current_app和g都属于应用上下文对象。")]),_._v(" "),a("p",[_._v("current_app:表示当前运行程序文件的程序实例。")]),_._v(" "),a("p",[_._v("g:处理请求时，用于临时存储的对象，每次请求都会重设这个变量。比如：我们可以获取一些临时请求的用户信息。")]),_._v(" "),a("p",[_._v("https://blog.csdn.net/Lyj20170608/article/details/79636583")]),_._v(" "),a("p",[_._v("engine")]),_._v(" "),a("p",[_._v("https://foofish.net/python-sqlalchemy-engine.html")]),_._v(" "),a("p",[_._v("restful规范")]),_._v(" "),a("p",[_._v("PUT 防止重复添加")]),_._v(" "),a("h4",{attrs:{id:"烟草"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#烟草"}},[_._v("#")]),_._v(" 烟草")]),_._v(" "),a("p",[_._v("nginx负载均衡、反向代理？ redis Nosql 键值对存储原理")]),_._v(" "),a("p",[a("strong",[_._v("正向代理代理客户端，反向代理代理服务器")])]),_._v(" "),a("p",[_._v("接手二次改造项目，熟悉项目逻辑")]),_._v(" "),a("p",[_._v("通过执行定时任务写入redis，更新烟草首页数据，熟悉cron，redis的使用")]),_._v(" "),a("p",[_._v("防火墙")]),_._v(" "),a("p",[_._v("负责与客户确认需求，进行路由开发以及数据库设计；")]),_._v(" "),a("p",[_._v("将烤房数据保存到redis")]),_._v(" "),a("p",[_._v("通过docker-compose部署系统")]),_._v(" "),a("p",[_._v("redis cron")]),_._v(" "),a("h4",{attrs:{id:"在线编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在线编译"}},[_._v("#")]),_._v(" 在线编译")]),_._v(" "),a("p",[_._v("通过构造多个ns-3的容器，解决了单台服务器同时只能编译一个任务的问题，使服务器能够同时执行多个ns-3编译任务")]),_._v(" "),a("p",[_._v("采用容器编排的思想，提出了一种固定生成4个ns-3容器但控制编译容器数的解决方案，达到了根据并发量控制同时编译的任务数的目的，延迟降低了9%")]),_._v(" "),a("p",[_._v("使用docker镜像生成ns-3的容器和由Nginx和Node.js组成的容器来搭建后台")]),_._v(" "),a("h3",{attrs:{id:"简历-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简历-2"}},[_._v("#")]),_._v(" 简历")]),_._v(" "),a("p",[_._v("奖项")]),_._v(" "),a("p",[_._v("2019年中国大学生计算机竞赛-微信小程序应用开发竞赛省级一等奖 06/2019")]),_._v(" "),a("p",[_._v("华中科技大学学习进步奖学金 09/2018")]),_._v(" "),a("p",[_._v("排名：50%")]),_._v(" "),a("p",[_._v("CET-6：519")]),_._v(" "),a("h2",{attrs:{id:"面经"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面经"}},[_._v("#")]),_._v(" 面经")]),_._v(" "),a("h3",{attrs:{id:"前端面试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端面试"}},[_._v("#")]),_._v(" 前端面试")]),_._v(" "),a("p",[_._v("进程、线程")]),_._v(" "),a("p",[_._v("阿里")]),_._v(" "),a("p",[_._v("一面")]),_._v(" "),a("p",[_._v("基础题没答出来 ajax redux")]),_._v(" "),a("p",[_._v("头条")]),_._v(" "),a("p",[_._v("基础不牢")]),_._v(" "),a("p",[_._v("一面")]),_._v(" "),a("p",[_._v("简历，react")]),_._v(" "),a("p",[_._v("二面")]),_._v(" "),a("p",[_._v("js理解题 判断输出 算法题 深拷贝 js面经 单向列表 不要慌张")]),_._v(" "),a("p",[_._v("三面")]),_._v(" "),a("p",[_._v("实现一个方法 算法题")]),_._v(" "),a("h3",{attrs:{id:"阿里-后台-一面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阿里-后台-一面"}},[_._v("#")]),_._v(" 阿里 后台 一面")]),_._v(" "),a("p",[_._v("1、数组和链表分别什么时候用")]),_._v(" "),a("p",[_._v("插入、删除操作比较多，链表的复杂度更低")]),_._v(" "),a("p",[_._v("2、redis和Mysql分别在什么场景下使用，"),a("strong",[_._v("数据可不可以直接全部用Redis存储呢")])]),_._v(" "),a("p",[_._v("redis内存里的数据断电会丢失，redis不支持关联查询等复杂的查询关系")]),_._v(" "),a("p",[_._v("3、如何建立索引")]),_._v(" "),a("p",[_._v("4、事务")]),_._v(" "),a("h3",{attrs:{id:"拼多多后台二面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拼多多后台二面"}},[_._v("#")]),_._v(" 拼多多后台二面")]),_._v(" "),a("p",[_._v("1、了解c++的stl吗")]),_._v(" "),a("p",[_._v("标准模板库")]),_._v(" "),a("p",[a("a",{attrs:{href:"http://c.biancheng.net/stl/",target:"_blank",rel:"noopener noreferrer"}},[_._v("STL教程：C++ STL快速入门"),a("OutboundLink")],1)]),_._v(" "),a("p",[_._v("2、了解用户态、内核态吗？如何切换的")]),_._v(" "),a("p",[_._v("3、除了项目还有学过其他语言吗，说说Rust里的控制权、所有权")]),_._v(" "),a("p",[_._v("所有权的内容中强调的是变量是资源的所有者，拥有对资源的控制权（例如移动，释放）")]),_._v(" "),a("p",[_._v("[rust 笔记 - 所有权 && 引用](https://int64.me/2017/rust 笔记 - 所有权 && 引用.html) "),a("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1517702",target:"_blank",rel:"noopener noreferrer"}},[_._v("一起学Rust-引用 · 借用"),a("OutboundLink")],1)]),_._v(" "),a("p",[_._v("4、对什么比较熟悉，MySQL里面的undolog分别是干啥的")]),_._v(" "),a("p",[_._v("5、redis的数据类型，redis里面的字符串是如何实现的")]),_._v(" "),a("p",[_._v("6、k8s里面如何进入容器，如何查看log")]),_._v(" "),a("p",[_._v("kubectl")]),_._v(" "),a("p",[_._v("7、讲讲Nginx里面有几层，proxy_pass是干啥的")]),_._v(" "),a("p",[_._v("基于TCP/UDP的四层负载均衡")]),_._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/83288342",target:"_blank",rel:"noopener noreferrer"}},[_._v("Nginx七层负载均衡"),a("OutboundLink")],1)]),_._v(" "),a("p",[_._v("8、cron里面如何定时任务，数字配置、第一行配置应该如何写")]),_._v(" "),a("p",[_._v("9、TCP里面的TIME_WAIT、CLOSE_WAIT分别是什么状态")]),_._v(" "),a("p",[_._v("10、了解RPC框架吗，用过哪些")]),_._v(" "),a("p",[_._v("远程过程调用")]),_._v(" "),a("p",[_._v("11、算法题，求一棵树2个节点相遇，最少要经过多少条边")]),_._v(" "),a("p",[_._v("12、算法题，后序遍历二叉树，非递归写法")]),_._v(" "),a("h3",{attrs:{id:"海康威视-云计算-一面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#海康威视-云计算-一面"}},[_._v("#")]),_._v(" 海康威视 云计算 一面")]),_._v(" "),a("p",[_._v("1、python和C的优劣势")]),_._v(" "),a("p",[_._v("2、python类的继承 MIL算法")]),_._v(" "),a("h3",{attrs:{id:"腾讯-后台-一面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#腾讯-后台-一面"}},[_._v("#")]),_._v(" 腾讯 后台 一面")]),_._v(" "),a("p",[_._v("1、索引什么时候会用到")]),_._v(" "),a("p",[_._v("4、python有用到线程吗，进程、线程的区别（面试官说线程有独立的地址空间）")]),_._v(" "),a("p",[_._v("2、有哪些内存？共享内存，栈内存，堆内存")]),_._v(" "),a("p",[_._v("3、你了解udp，为什么要用UDP：避免性能浪费 udp会指定ip 广播 多播")]),_._v(" "),a("p",[_._v("5、会c++吗")]),_._v(" "),a("p",[_._v("6、hash和红黑树区别，https://www.jianshu.com/p/0a0c78dc8ece")]),_._v(" "),a("p",[_._v("7、算法题，正则表达式字符串匹配，https://leetcode-cn.com/problems/zheng-ze-biao-da-shi-pi-pei-lcof/")]),_._v(" "),a("h3",{attrs:{id:"头条实习-后台-一面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#头条实习-后台-一面"}},[_._v("#")]),_._v(" 头条实习 后台 一面")]),_._v(" "),a("p",[_._v("1、B树、B+树的区别，为啥要用B+树")]),_._v(" "),a("p",[_._v("2、堆排序")]),_._v(" "),a("h3",{attrs:{id:"猿辅导-服务端一面面经"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#猿辅导-服务端一面面经"}},[_._v("#")]),_._v(" 猿辅导 服务端一面面经")]),_._v(" "),a("p",[_._v("进程与线程的区别")]),_._v(" "),a("h6",{attrs:{id:"redis-应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-应用场景"}},[_._v("#")]),_._v(" Redis 应用场景")]),_._v(" "),a("p",[_._v("1会话缓存")]),_._v(" "),a("p",[_._v("2消息队列(支付)")]),_._v(" "),a("p",[_._v("3发布订阅(消息通知)")]),_._v(" "),a("p",[_._v("4排行榜或计数")]),_._v(" "),a("p",[_._v("5商品、评论列表")]),_._v(" "),a("h6",{attrs:{id:"mysql范式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql范式"}},[_._v("#")]),_._v(" Mysql范式")]),_._v(" "),a("p",[_._v("6层，一般情况前3")]),_._v(" "),a("p",[_._v("1NF 原子性，不可再分")]),_._v(" "),a("p",[_._v("2NF 部分依赖")]),_._v(" "),a("p",[_._v("复合主键（多字段），依赖主键的某个字段")]),_._v(" "),a("p",[_._v("1单独成表，2使用逻辑主键")]),_._v(" "),a("p",[_._v("3NF 传递依赖")]),_._v(" "),a("p",[_._v("传递依赖、依赖字段取出组成表")]),_._v(" "),a("h6",{attrs:{id:"tcp、udp区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp、udp区别"}},[_._v("#")]),_._v(" TCP、UDP区别")]),_._v(" "),a("p",[_._v("1、面向连接")]),_._v(" "),a("p",[_._v("3次握手，TIME_WAIT状态，端口无法被释放")]),_._v(" "),a("p",[_._v("2、可靠 不可靠")]),_._v(" "),a("p",[_._v("握手、ACK、重传")]),_._v(" "),a("ul",[a("li",[_._v("校验和")]),_._v(" "),a("li",[_._v("定时器")]),_._v(" "),a("li",[_._v("序列号")])]),_._v(" "),a("p",[_._v("3、有序性")]),_._v(" "),a("p",[_._v("seq序列号排序")]),_._v(" "),a("p",[_._v("4&5、面向字节流 面向报文")]),_._v(" "),a("p",[_._v("一次一个数据块，划端或积累，头20bytes")]),_._v(" "),a("p",[_._v("一次一个报文，8bytes报文头")]),_._v(" "),a("p",[_._v("6、流量控制")]),_._v(" "),a("p",[_._v("应用场景")]),_._v(" "),a("p",[_._v("文件传输、邮件")]),_._v(" "),a("p",[_._v("即时通讯、网络语音、视频、广播（无需重传）")]),_._v(" "),a("h6",{attrs:{id:"udp单播、多播、广播"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#udp单播、多播、广播"}},[_._v("#")]),_._v(" UDP单播、多播、广播")]),_._v(" "),a("p",[_._v("端对端，特定主机接受")]),_._v(" "),a("p",[_._v("同一分组")]),_._v(" "),a("p",[_._v("整个局域网 255.255.255.255")]),_._v(" "),a("h6",{attrs:{id:"网络视频"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络视频"}},[_._v("#")]),_._v(" 网络视频")]),_._v(" "),a("p",[_._v("时间延迟：编码、解码、传输")]),_._v(" "),a("p",[_._v("码控来进行视频缓存，可以减小")]),_._v(" "),a("p",[_._v("增加关键帧I帧，减小开头延迟加快解码；减少关键帧，降低码率和带宽")]),_._v(" "),a("h6",{attrs:{id:"java面向对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java面向对象"}},[_._v("#")]),_._v(" java面向对象")]),_._v(" "),a("p",[_._v("1、封装")]),_._v(" "),a("p",[_._v("对象是实例，类是一类具有相同属性、行为的问题的抽象")]),_._v(" "),a("p",[_._v("2、继承")]),_._v(" "),a("p",[_._v("3、多态")]),_._v(" "),a("p",[_._v("4、抽象")]),_._v(" "),a("h6",{attrs:{id:"非对称密码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非对称密码"}},[_._v("#")]),_._v(" 非对称密码")]),_._v(" "),a("p",[_._v("公钥来进行加密")]),_._v(" "),a("p",[_._v("RSA是可以双向加密的：私钥加密，公钥解密；公钥加密，私钥解密")]),_._v(" "),a("h6",{attrs:{id:"输出当前位置后面最大的数-最后一位输出-1-如-arr-18-5-4-6-1-输出arr-18-6-6-6-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出当前位置后面最大的数-最后一位输出-1-如-arr-18-5-4-6-1-输出arr-18-6-6-6-1"}},[_._v("#")]),_._v(" 输出当前位置后面最大的数，最后一位输出-1；如 arr[18,5,4,6,1 ]，输出arr[18,6,6,6,-1]")]),_._v(" "),a("h3",{attrs:{id:"猿辅导-后端-二面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#猿辅导-后端-二面"}},[_._v("#")]),_._v(" 猿辅导 后端 二面")]),_._v(" "),a("p",[_._v("MySQL中ACID指啥")]),_._v(" "),a("p",[_._v("什么是幻读")]),_._v(" "),a("p",[_._v("建立主键的原因")]),_._v(" "),a("p",[_._v("联合外键最左匹配")]),_._v(" "),a("p",[_._v("redis了解吗")]),_._v(" "),a("p",[_._v("数据类型")]),_._v(" "),a("p",[_._v("线程、进程的区别")]),_._v(" "),a("p",[_._v("CPU的三级缓存")]),_._v(" "),a("p",[_._v("分页机制")]),_._v(" "),a("p",[_._v("tcp在哪一层，传输层")]),_._v(" "),a("p",[_._v("tcp和udp的区别")]),_._v(" "),a("p",[_._v("算法")]),_._v(" "),a("p",[_._v("反问，在项目组中参与什么样的工作")]),_._v(" "),a("h3",{attrs:{id:"有赞java后端一面面经"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有赞java后端一面面经"}},[_._v("#")]),_._v(" 有赞Java后端一面面经")]),_._v(" "),a("h4",{attrs:{id:"redis单线程为什么快"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis单线程为什么快"}},[_._v("#")]),_._v(" redis单线程为什么快")]),_._v(" "),a("p",[_._v("CPU不是瓶颈，而是网络I/O")]),_._v(" "),a("p",[_._v("1、运行速度快，跑着内存，")]),_._v(" "),a("p",[_._v("负责存区的线程一个")]),_._v(" "),a("p",[_._v("2、容易实现，无上下文切换，cpu利用率高")]),_._v(" "),a("p",[_._v("3、多路复用io阻塞机制")]),_._v(" "),a("p",[_._v("4、数据结构简单，操作节省时间")]),_._v(" "),a("h4",{attrs:{id:"redis哈希实现、扩容细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis哈希实现、扩容细节"}},[_._v("#")]),_._v(" redis哈希实现、扩容细节")]),_._v(" "),a("p",[_._v("https://blog.csdn.net/yangstarss/article/details/79568097")]),_._v(" "),a("h4",{attrs:{id:"ap还是cp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ap还是cp"}},[_._v("#")]),_._v(" AP还是CP")]),_._v(" "),a("p",[_._v("AP是可用性 一致性")]),_._v(" "),a("p",[_._v("单机 CP")]),_._v(" "),a("p",[_._v("集群AP")]),_._v(" "),a("p",[_._v("Redis-cluster：去中心化，中间件，集群中任意节点平等，任一节点可获得全局的数据")]),_._v(" "),a("p",[_._v("其他")]),_._v(" "),a("p",[_._v("开放寻址")]),_._v(" "),a("p",[_._v("mysql")]),_._v(" "),a("p",[_._v("select 和 epoll区别")]),_._v(" "),a("h5",{attrs:{id:"面经-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面经-2"}},[_._v("#")]),_._v(" 面经")]),_._v(" "),a("p",[_._v("tcp3次握手")]),_._v(" "),a("p",[a("strong",[_._v("面向连接的、可靠的")]),_._v("字节流服务")]),_._v(" "),a("p",[_._v("使用滑动窗口机制来实现流量控制，通过动态改变窗口的大小进行拥塞控制")]),_._v(" "),a("h6",{attrs:{id:"三次握手与四次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三次握手与四次挥手"}},[_._v("#")]),_._v(" 三次握手与四次挥手")]),_._v(" "),a("p",[_._v("进程、线程")]),_._v(" "),a("p",[_._v("手写webserver python进程间通信")]),_._v(" "),a("p",[_._v("一个典型的生产者消费者模型，问我要不要加锁。我说对消息队列的访问我是加锁了的")]),_._v(" "),a("p",[_._v("不要加锁")]),_._v(" "),a("p",[_._v("进程是操作系统中资源分配的最小单位，线程是最小调度单位")]),_._v(" "),a("p",[_._v("进程有自己独立的地址空间，线程没有自己独立的地址空间，一个进程可以有多个线程，同一个进程中的多个线程共享这个进程的地址空间。")]),_._v(" "),a("p",[_._v("进程和进程的通信了，典型的方式有很多种啊，什么消息队列，共享存储，管道啊等等")]),_._v(" "),a("h3",{attrs:{id:"大数据-面经"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大数据-面经"}},[_._v("#")]),_._v(" 大数据 面经")]),_._v(" "),a("p",[_._v("Q：10亿qq号里找到1个，要求O(1)")]),_._v(" "),a("p",[_._v("A：大数据的解法无非那么几种，常见的就是hash和bitmap")]),_._v(" "),a("p",[_._v("Q：在团队协作中，要确定一个模块接口，问我如何推进这个事？")]),_._v(" "),a("p",[_._v("A：出一版，和前端协商，写接口，出文档")]),_._v(" "),a("p",[_._v("Q：我问了是哪个事业群，如果顺利什么时候二面，怎么评价我今天的表现")]),_._v(" "),a("p",[_._v("A：")]),_._v(" "),a("p",[_._v("Q：二分查找的逻辑？")]),_._v(" "),a("p",[_._v("A：折半(二分)，有序，每次取区间中的中间值和目标值比较，每一 轮迭代都可以减少一半的元素")]),_._v(" "),a("p",[_._v("options请求")]),_._v(" "),a("p",[_._v("Q：快排（一定要好好看）、归并、二分查找")]),_._v(" "),a("p",[_._v("A：手写")]),_._v(" "),a("p",[_._v("Q：10g文件，只有2g内存，怎么查找文件中指定的字符串出现位置。")]),_._v(" "),a("p",[_._v("A：MapReduce分割文件处理。可以用cat | grep 管道处理")]),_._v(" "),a("p",[_._v("Q：MySQL的索引，B+树性质")]),_._v(" "),a("p",[_._v("Q：Linux的cpu 100怎么排查")]),_._v(" "),a("p",[_._v("A：top jstack，日志，gui工具")]),_._v(" "),a("p",[_._v("Q：redis键值对存储方式")]),_._v(" "),a("p",[_._v("A：https://zhuanlan.zhihu.com/p/87203647 哈希 https://blog.csdn.net/yangstarss/article/details/79568097")]),_._v(" "),a("p",[_._v("Q：Redis内存数据库的内存指的是共享内存么")]),_._v(" "),a("p",[_._v("A：效率要比消息、内存共享等方式进程间互通数据效率要底的多 socket通信 共享内存文件")]),_._v(" "),a("p",[_._v("Q：Redis的持久化方式")]),_._v(" "),a("p",[_._v("A：RDB（默认） 定时快照 和AOF 实时记录命令")]),_._v(" "),a("h3",{attrs:{id:"拼多多服务端一面-二面-hr面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拼多多服务端一面-二面-hr面"}},[_._v("#")]),_._v(" 拼多多服务端一面+二面+HR面")]),_._v(" "),a("p",[_._v("1、什么是索引")]),_._v(" "),a("p",[_._v("索引（Index）是帮助MySQL高效获取数据的数据结构")]),_._v(" "),a("p",[_._v("2、怎么通过索引查找数据")]),_._v(" "),a("p",[_._v("3、Id 主键索引 (a,b)联合索引")]),_._v(" "),a("p",[_._v("①  Select * from table where a=** and b=**;")]),_._v(" "),a("p",[_._v("②  Select a,b,Id from table where a=** and b=**;")]),_._v(" "),a("p",[_._v("上面两个查询那个更快（回表查询和索引覆盖）")]),_._v(" "),a("p",[_._v("③  select * from table where a>** and b=**;用到了什么索引")]),_._v(" "),a("p",[_._v("④  select * from table where b=**;会用索引吗")]),_._v(" "),a("p",[_._v("4、算法，螺旋遍历")]),_._v(" "),a("h3",{attrs:{id:"拼多多一面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拼多多一面"}},[_._v("#")]),_._v(" 拼多多一面")]),_._v(" "),a("p",[_._v("输入url经历的过程")]),_._v(" "),a("p",[_._v("DNS解析、")]),_._v(" "),a("h2",{attrs:{id:"专题、专项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#专题、专项"}},[_._v("#")]),_._v(" 专题、专项")]),_._v(" "),a("h3",{attrs:{id:"mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[_._v("#")]),_._v(" MySql")]),_._v(" "),a("p",[_._v("分析比较 B+ 树的优点")]),_._v(" "),a("p",[_._v("<id,column> <index,id>")]),_._v(" "),a("p",[_._v("https://draveness.me/whys-the-design-mysql-b-plus-tree/")]),_._v(" "),a("p",[_._v("查询和修改O(logn) 树的高度")]),_._v(" "),a("p",[_._v("二叉查找树")]),_._v(" "),a("p",[_._v("平衡二叉树AVLTree")]),_._v(" "),a("p",[_._v("https://blog.csdn.net/yin767833376/article/details/81511377")]),_._v(" "),a("p",[_._v("任何节点的两个子树的高度最大差为1")]),_._v(" "),a("p",[_._v("B-tree平衡多路查找树")]),_._v(" "),a("p",[_._v("为磁盘等外存储设备设计的一种平衡查找树")]),_._v(" "),a("p",[_._v("B+tree")]),_._v(" "),a("p",[_._v("数据都在叶子节点上，并且增加了顺序访问指针，每个叶子节点都指向相邻的叶子节点的地址")]),_._v(" "),a("p",[_._v("能够保证数据按照键的顺序进行存储，也就是相邻的所有数据其实都是按照自然顺序排列的")]),_._v(" "),a("p",[_._v("hash处理范围查询或者排序性能会非常差，只能全表扫描，哈希作为底层的数据结构的表能够以 "),a("code",[_._v("O(1)")]),_._v(" 的速度处理单个数据行的增删改查")]),_._v(" "),a("p",[_._v("和B tree的最大区别")]),_._v(" "),a("p",[_._v("B 树可以在非叶结点中存储数据，但是 B+ 树的所有数据其实都存储在叶子节点中，"),a("strong",[_._v("通过『指针』依次按顺序连接")])]),_._v(" "),a("p",[_._v("json格式")]),_._v(" "),a("table",[a("thead",[a("tr",[a("th",[_._v("Database")]),_._v(" "),a("th",[_._v("Database")])])]),_._v(" "),a("tbody",[a("tr",[a("td",[_._v("Collection")]),_._v(" "),a("td",[_._v("Table")])]),_._v(" "),a("tr",[a("td",[_._v("Document")]),_._v(" "),a("td",[_._v("Record/Row")])]),_._v(" "),a("tr",[a("td",[_._v("Filed")]),_._v(" "),a("td",[_._v("Column")])]),_._v(" "),a("tr",[a("td",[_._v("Embedded Documents")]),_._v(" "),a("td",[_._v("Table join")])])])]),_._v(" "),a("p",[_._v("聚合操作能将多个文档中的值组合起来，对成组数据执行各种操作，返回单一的结果。它相当于 "),a("code",[_._v("SQ")]),_._v("L 中的 "),a("code",[_._v("count(*)")]),_._v(" 组合 "),a("code",[_._v("group by")]),_._v("。对于 "),a("code",[_._v("MongoDB")]),_._v(" 中的聚合操作，应该使用"),a("code",[_._v("aggregate()")]),_._v("方法")]),_._v(" "),a("p",[_._v("索引机制")]),_._v(" "),a("p",[_._v("二叉树")]),_._v(" "),a("h4",{attrs:{id:"分库分表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分库分表"}},[_._v("#")]),_._v(" 分库分表")]),_._v(" "),a("h5",{attrs:{id:"索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[_._v("#")]),_._v(" 索引")]),_._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/h2pl/Java-Tutorial/blob/master/docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0Mysql%E6%95%B0%E6%8D%AE%E5%BA%934%EF%BC%9AMysql%E7%B4%A2%E5%BC%95%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E5%92%8C%E7%9B%B8%E5%85%B3%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95.md",target:"_blank",rel:"noopener noreferrer"}},[_._v("https://github.com/h2pl/Java-Tutorial/blob/master/docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0Mysql%E6%95%B0%E6%8D%AE%E5%BA%934%EF%BC%9AMysql%E7%B4%A2%E5%BC%95%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E5%92%8C%E7%9B%B8%E5%85%B3%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95.md"),a("OutboundLink")],1)]),_._v(" "),a("h3",{attrs:{id:"redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[_._v("#")]),_._v(" Redis")]),_._v(" "),a("h4",{attrs:{id:"为什么用缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么用缓存"}},[_._v("#")]),_._v(" 为什么用缓存：")]),_._v(" "),a("p",[_._v("高性能(查询，多读少写)、高并发(并发量mysql的几十倍)")]),_._v(" "),a("h4",{attrs:{id:"缓存的不良后果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存的不良后果"}},[_._v("#")]),_._v(" 缓存的不良后果")]),_._v(" "),a("h5",{attrs:{id:"与数据库双写不一致"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与数据库双写不一致"}},[_._v("#")]),_._v(" 与数据库双写不一致")]),_._v(" "),a("p",[_._v("若要严格一致，读写串行化，写到内存队列")]),_._v(" "),a("p",[_._v("Cache Aside Pattern")]),_._v(" "),a("p",[a("strong",[_._v("读")]),_._v("，先读缓存，再读数据库")]),_._v(" "),a("p",[a("strong",[_._v("修改")]),_._v("，先删除缓存，更新数据库")]),_._v(" "),a("p",[_._v("懒加载，用到缓存才去算")]),_._v(" "),a("p",[_._v("复杂的数据库不一致：缓存更新的请求放到队列中，多个更新缓存的请求进行过滤")]),_._v(" "),a("p",[_._v("写的QPS500没有问题：如果一秒有 500 的写操作，如果分成 5 个时间片，每 200ms 就 100 个写操作，放到 20 个内存队列中，每个内存队列，可能就积压 5 个写操作。每个写操作性能测试后，一般是在 20ms 左右就完成，那么针对每个内存队列的数据的读请求，也就最多 hang 一会儿，200ms 以内肯定能返回")]),_._v(" "),a("h4",{attrs:{id:"线程模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程模型"}},[_._v("#")]),_._v(" 线程模型")]),_._v(" "),a("p",[_._v("Redis6.0引入多线程，多线程处理网络读写、协议解析，执行命令仍然是单线程")]),_._v(" "),a("p",[_._v("对大键值对的操作，通过多线程非阻塞地释放内存空间，减少主线程的阻塞")]),_._v(" "),a("p",[_._v("文件事件处理器的结构包含 4 个部分：")]),_._v(" "),a("ul",[a("li",[_._v("多个 socket")]),_._v(" "),a("li",[_._v("IO 多路复用程序")]),_._v(" "),a("li",[_._v("文件事件分派器")]),_._v(" "),a("li",[_._v("事件处理器（连接应答处理器、命令请求处理器、命令回复处理器）")])]),_._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/doocs/advanced-java/raw/master/docs/high-concurrency/images/redis-single-thread-model.png",alt:"Redis-single-thread-model"}})]),_._v(" "),a("h4",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[_._v("#")]),_._v(" 数据类型")]),_._v(" "),a("ul",[a("li",[_._v("**String：**缓存、计数器、分布式锁等。")]),_._v(" "),a("li",[_._v("**List：**列表，链表、队列、微博关注人时间轴列表等。")]),_._v(" "),a("li",[_._v("**Hash：**散列表，用户信息、Hash 表等。")]),_._v(" "),a("li",[_._v("**Set：**集合，去重、赞、踩、共同好友等。")]),_._v(" "),a("li",[_._v("**Zset：**有序列表，访问量排行榜、点击量排行榜等。")])]),_._v(" "),a("h3",{attrs:{id:"操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[_._v("#")]),_._v(" 操作系统")]),_._v(" "),a("p",[a("a",{attrs:{href:"https://jiangren.work/2020/02/16/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE%E6%B1%87%E6%80%BB/#2-3-%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1",target:"_blank",rel:"noopener noreferrer"}},[_._v("https://jiangren.work/2020/02/16/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE%E6%B1%87%E6%80%BB/#2-3-%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1"),a("OutboundLink")],1)]),_._v(" "),a("h5",{attrs:{id:"什么是用户态与核心态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是用户态与核心态"}},[_._v("#")]),_._v(" 什么是用户态与核心态")]),_._v(" "),a("h3",{attrs:{id:"计算机网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络"}},[_._v("#")]),_._v(" 计算机网络")]),_._v(" "),a("h4",{attrs:{id:"tcp-udp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-udp"}},[_._v("#")]),_._v(" TCP UDP")]),_._v(" "),a("p",[_._v("[传输层](https://github.com/CyC2018/CS-Notes/blob/master/notes/计算机网络 - 传输层.md)")]),_._v(" "),a("h2",{attrs:{id:"算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[_._v("#")]),_._v(" 算法")]),_._v(" "),a("p",[_._v("位运算")]),_._v(" "),a("p",[_._v("快速幂")]),_._v(" "),a("h3",{attrs:{id:"背包问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背包问题"}},[_._v("#")]),_._v(" 背包问题")]),_._v(" "),a("p",[_._v("https://zhuanlan.zhihu.com/p/93857890")]),_._v(" "),a("h3",{attrs:{id:"自我介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自我介绍"}},[_._v("#")]),_._v(" 自我介绍")]),_._v(" "),a("p",[_._v("烟草 tcp")]),_._v(" "),a("p",[_._v("考试系统 Redis")]),_._v(" "),a("h3",{attrs:{id:"c-资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-资源"}},[_._v("#")]),_._v(" c++资源")]),_._v(" "),a("p",[_._v("单播、广播 https://www.cnblogs.com/jingliming/p/4477264.html#es7Yahbk")]),_._v(" "),a("p",[_._v("多路复用 https://www.cnblogs.com/Anker/archive/2013/08/14/3258674.html")]),_._v(" "),a("h5",{attrs:{id:"java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[_._v("#")]),_._v(" java")]),_._v(" "),a("p",[_._v("https://www.cnblogs.com/wushaopei/p")]),_._v(" "),a("p",[_._v("/11979200.html")]),_._v(" "),a("h5",{attrs:{id:"go"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go"}},[_._v("#")]),_._v(" go")]),_._v(" "),a("p",[_._v("https://github.com/greyireland/algorithm-pattern?utm_source=gold_browser_extension")]),_._v(" "),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[_._v("#")]),_._v(" 其他")]),_._v(" "),a("p",[_._v("https")]),_._v(" "),a("p",[_._v("https://zhuanlan.zhihu.com/p/72616216")]),_._v(" "),a("h3",{attrs:{id:"资源参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资源参考"}},[_._v("#")]),_._v(" 资源参考")]),_._v(" "),a("h5",{attrs:{id:"python-数据结构与算法视频教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python-数据结构与算法视频教程"}},[_._v("#")]),_._v(" "),a("a",{attrs:{href:"https://python-data-structures-and-algorithms.readthedocs.io/zh/latest/",target:"_blank",rel:"noopener noreferrer"}},[_._v("Python 数据结构与算法视频教程"),a("OutboundLink")],1)]),_._v(" "),a("h5",{attrs:{id:"互联网-java-工程师进阶知识完全扫盲"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#互联网-java-工程师进阶知识完全扫盲"}},[_._v("#")]),_._v(" "),a("a",{attrs:{href:"https://github.com/doocs/advanced-java?utm_source=gold_browser_extension",target:"_blank",rel:"noopener noreferrer"}},[_._v("互联网 Java 工程师进阶知识完全扫盲"),a("OutboundLink")],1)]),_._v(" "),a("h5",{attrs:{id:"技术面试必备基础知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#技术面试必备基础知识"}},[_._v("#")]),_._v(" "),a("a",{attrs:{href:"https://github.com/CyC2018/CS-Notes",target:"_blank",rel:"noopener noreferrer"}},[_._v("技术面试必备基础知识"),a("OutboundLink")],1)]),_._v(" "),a("h2",{attrs:{id:"思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[_._v("#")]),_._v(" 思路")]),_._v(" "),a("h5",{attrs:{id:"递归分治"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归分治"}},[_._v("#")]),_._v(" 递归分治")]),_._v(" "),a("h5",{attrs:{id:"双指针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双指针"}},[_._v("#")]),_._v(" 双指针")]),_._v(" "),a("h5",{attrs:{id:"辅助栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#辅助栈"}},[_._v("#")]),_._v(" 辅助栈")]),_._v(" "),a("p",[_._v("offer31")]),_._v(" "),a("h5",{attrs:{id:"回溯法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回溯法"}},[_._v("#")]),_._v(" 回溯法")]),_._v(" "),a("p",[_._v("offer34")]),_._v(" "),a("h5",{attrs:{id:"动态规划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[_._v("#")]),_._v(" 动态规划")]),_._v(" "),a("h2",{attrs:{id:"投递"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#投递"}},[_._v("#")]),_._v(" 投递")]),_._v(" "),a("h3",{attrs:{id:"小米"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小米"}},[_._v("#")]),_._v(" 小米")]),_._v(" "),a("h4",{attrs:{id:"分布式系统开发工程师-存储平台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式系统开发工程师-存储平台"}},[_._v("#")]),_._v(" 分布式系统开发工程师-存储平台")]),_._v(" "),a("p",[_._v("redis等开源框架经验优先")]),_._v(" "),a("h3",{attrs:{id:"美团"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#美团"}},[_._v("#")]),_._v(" 美团")]),_._v(" "),a("h4",{attrs:{id:"分布式数据库研发工程师"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式数据库研发工程师"}},[_._v("#")]),_._v(" 分布式数据库研发工程师")]),_._v(" "),a("p",[_._v("存储系统、KV、缓存、数据库等数据存储和分布式技术领域的研究经验")]),_._v(" "),a("p",[_._v("MySQL，操作系统、计算机网络、线程")]),_._v(" "),a("h3",{attrs:{id:"头条"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#头条"}},[_._v("#")]),_._v(" 头条")]),_._v(" "),a("h4",{attrs:{id:"基础架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础架构"}},[_._v("#")]),_._v(" 基础架构")]),_._v(" "),a("h4",{attrs:{id:"极光-后台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#极光-后台"}},[_._v("#")]),_._v(" 极光 后台")]),_._v(" "),a("p",[_._v("Linux Golang")]),_._v(" "),a("p",[_._v("缓存、消息队列、负载均衡、分布式存储、分布式事务")]),_._v(" "),a("p",[_._v("Docker K8s")]),_._v(" "),a("h3",{attrs:{id:"海康微视"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#海康微视"}},[_._v("#")]),_._v(" 海康微视")]),_._v(" "),a("h5",{attrs:{id:"云计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#云计算"}},[_._v("#")]),_._v(" 云计算")]),_._v(" "),a("p",[_._v("Linux内核，云计算技术，计网")]),_._v(" "),a("h3",{attrs:{id:"滴滴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#滴滴"}},[_._v("#")]),_._v(" 滴滴")]),_._v(" "),a("h5",{attrs:{id:"服务端研发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端研发"}},[_._v("#")]),_._v(" 服务端研发")]),_._v(" "),a("h5",{attrs:{id:"后端研发工程师-网约车供需策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后端研发工程师-网约车供需策略"}},[_._v("#")]),_._v(" 后端研发工程师-网约车供需策略")]),_._v(" "),a("h3",{attrs:{id:"图森未来"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图森未来"}},[_._v("#")]),_._v(" 图森未来")]),_._v(" "),a("h3",{attrs:{id:"阿里"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阿里"}},[_._v("#")]),_._v(" 阿里")]),_._v(" "),a("p",[_._v("Java研发工程师")]),_._v(" "),a("h3",{attrs:{id:"shoppe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shoppe"}},[_._v("#")]),_._v(" shoppe")]),_._v(" "),a("h3",{attrs:{id:"顺丰"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺丰"}},[_._v("#")]),_._v(" 顺丰")]),_._v(" "),a("h3",{attrs:{id:"第四范式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四范式"}},[_._v("#")]),_._v(" 第四范式")]),_._v(" "),a("p",[_._v("https://www.nowcoder.com/discuss/501794?channel=1009&source_id=home_feed")]),_._v(" "),a("p",[_._v("后台")]),_._v(" "),a("h3",{attrs:{id:"哈喽出行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哈喽出行"}},[_._v("#")]),_._v(" 哈喽出行")]),_._v(" "),a("p",[_._v("Java")]),_._v(" "),a("p",[_._v("分布式系统原理")]),_._v(" "),a("p",[a("a",{attrs:{href:"https://careers.hellobike.com/searchDetail?jobType=%E6%8A%80%E6%9C%AF&from=college&routerFrom=college",target:"_blank",rel:"noopener noreferrer"}},[_._v("https://careers.hellobike.com/searchDetail?jobType=%E6%8A%80%E6%9C%AF&from=college&routerFrom=college"),a("OutboundLink")],1)]),_._v(" "),a("p",[_._v("https://www.nowcoder.com/discuss/501492?channel=1009&source_id=home_feed")]),_._v(" "),a("h3",{attrs:{id:"爱奇艺"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#爱奇艺"}},[_._v("#")]),_._v(" 爱奇艺")]),_._v(" "),a("h3",{attrs:{id:"webank"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webank"}},[_._v("#")]),_._v(" WeBank")]),_._v(" "),a("p",[_._v("后台 分布式数据库")]),_._v(" "),a("h3",{attrs:{id:"intel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intel"}},[_._v("#")]),_._v(" Intel")]),_._v(" "),a("h5",{attrs:{id:"云平台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#云平台"}},[_._v("#")]),_._v(" 云平台")]),_._v(" "),a("h3",{attrs:{id:"paypel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#paypel"}},[_._v("#")]),_._v(" PayPel")]),_._v(" "),a("h5",{attrs:{id:"递归法-前序遍历为例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归法-前序遍历为例"}},[_._v("#")]),_._v(" 递归法------前序遍历为例")]),_._v(" "),a("ol",[a("li",[_._v("确定递归参数、返回值 node nul")]),_._v(" "),a("li",[_._v("确定终止条件 node = null")]),_._v(" "),a("li",[_._v("单层递归逻辑 根、左、右")])]),_._v(" "),a("h5",{attrs:{id:"迭代法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代法"}},[_._v("#")]),_._v(" 迭代法")]),_._v(" "),a("p",[_._v("前序：栈辅助遍历")]),_._v(" "),a("p",[_._v("中序：指针、栈辅助遍历")]),_._v(" "),a("p",[_._v("后序：前序为根左右，右左互换，根右左，再倒序，左右根")]),_._v(" "),a("h5",{attrs:{id:"回溯法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回溯法-2"}},[_._v("#")]),_._v(" 回溯法")]),_._v(" "),a("p",[_._v("剑指offer")]),_._v(" "),a("p",[_._v("49.丑数:\t自身不断递归，取最小值")]),_._v(" "),a("p",[_._v("2节点的最短路径")]),_._v(" "),a("p",[_._v("扑克牌中的顺子:\t排序")])])}),[],!1,null,null,null);v.default=r.exports}}]);